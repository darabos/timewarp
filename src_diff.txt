This file will attempt to document things relevant to porting code 
writtenfor older versions of TimeWarp to the current version.

Changed ship data file formats to allow spacesprite attributes.  

!!! TW has been converted to using 2-dimensional Vectors to represent
game positions and velocities.  The vector class, named Vector2, is
defined in util/vector2.h and util/vector2.cpp.  Many existing functions
and methods that took pairs of doubles corresponding to x & y dimensions
now take a vector instead.

                Before                  After

Globals         X_MAX, Y_MAX            map_size
                space_view_w, ...h      space_view_size
                space_center_x, ...y    space_center
                space_x, space_y        space_corner
                space_stars_x, ...y     space_center_nowrap

functions       wcorner(), hcorner()    corner()        *note 1
                normalize()             normalize()     *note 1 & 2
                min_delta()             min_delta()     *note 1 & 2
                nearest_coord()         nearest_coord() *note 1 & 2
                atan3()                 atan()          *note 2 & 3

SpaceLocation   x, y                    pos
                normal_x(),normal_y()   normal_pos()
                vx, vy                  vel
                get_vx(), get_vy()      get_vel()

SpaceObject     w,h                     size
                width(), height()       get_size()

SpaceLine       edge_x(), edge_y()      edge()          *note 3

SpaceSprite     width(), height()       size()          *note 3

Physics         width, height           size

These are just the ones that have either changed names or picked up
new default parameters.  The ones that just had pairs of doubles
switched to vectors aren't listed here, but includes things like
translate, most constructors, intercept_angle, animate, ...
Some functions & methods that took pairs of int's were NOT changed,
such as draw_character, 

note 1: This function now has a default parameter of map_size
note 2: This function will now take either doubles or vectors
note 3: The old ones still exist, but might be removed in the future

I haven't listed the methods that changed parameter types without
changing name and/or gaining implicit parameters and/or duplication.
If you get a compiler error about a function that takes x,y pairs, try
replaceing x,y with Vector2(x,y)
!!!

SpaceObject::getSprite is now SpaceObject::get_sprite.  and
getSpriteIndex to get_sprite_index.  

There is now a function which does the simple math usually used to figure
out somethings sprite index.  Instead of the old "sprite_index = (int)(angle / 5.625) + 16;
sprite_index &= 63;" the new form would be "sprite_index = get_index(angle);".
The old form is still perfectly acceptable, this is just intended to be more
convenient.  get_index is defined like this:
inline int get_index(double angle, double o=PI/2, int n=64) {
        int i = iround((o + angle) * n / PI2);
        while (i < 0) i += n; while (i >= n) i -= n; return i;}

!Angles are now in radians!

health / damage are now doubles instead of ints.  Among other things, this effects everything that overrides SpaceLocation::handle_damage and SpaceLocation::handle_fuelsap

GLOBAL_MAXSPEED is now MAX_SPEED, and no longer constant

Game::calculate(int time) is now Game::calculate().  This effects all 
derived classes of course.  

game->addItem() and game->addPressence() are now both game->add()

SpaceLocation::isProtected and isInvisible are now both doubles instead 
of ints or bools.

Damage is dealt differently now.  Instead of saying
"other->damage += 4; other->handle_damage(this);" now you woud say
"other->handle_damage(this, 4);" or the short version "damage(other, 4);"
Also, there is now seperate functions handle_fuel_sap() and
handle_speed_loss() instead of all using the same mechanisms.  













